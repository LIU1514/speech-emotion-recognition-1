{"ast":null,"code":"var _jsxFileName = \"/Users/xmly/PythonProjects/speech-emotion-recognition/emotion-voice/src/components/Voice.js\";\nimport { ReactMic } from 'react-mic';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport ReactAudioPlayer from 'react-audio-player';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nexport class Voice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      this.setState({\n        record: true,\n        display: false\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false,\n        display: true\n      });\n    };\n\n    this.onStop = this.onStop.bind(this);\n    this.handleAnalyze = this.handleAnalyze.bind(this);\n    this.state = {\n      record: false,\n      display: false,\n      data: {\n        labels: ['Angry', 'Sad', 'Passion', 'Fear', 'Neutral'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2],\n          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n          borderWidth: 0\n        }],\n        audio_set: true,\n        emotion: \"none\"\n      }\n    };\n  }\n\n  postRequest() {\n    axios.post('http://localhost:8000/analyse/', {\n      \"name\": \"frank\"\n    }).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  handleAnalyze() {\n    axios.post('http://localhost:8000/analyse/', {\n      \"path\": this.state.path\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        emotion: res.data[\"emotion\"]\n      });\n    });\n  }\n\n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  setValue(val) {\n    this.setState(val);\n  }\n\n  onStop(recordedBlob) {\n    // const bloburl = recordedBlob.blobURL\n    console.log(\"sending data...\");\n    console.log(recordedBlob);\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', recordedBlob.blobURL, true);\n    xhr.responseType = 'blob';\n    const scope = this;\n\n    xhr.onload = function (e) {\n      if (this.status == 200) {\n        var myBlob = this.response;\n        let blobData = new FormData();\n        blobData.append('file', myBlob);\n        axios.post('http://localhost:8000/record/', blobData, {}).then(res => {\n          console.log(res.data);\n          scope.setState({\n            path: res.data[\"dir\"],\n            audio_set: true\n          });\n        });\n      }\n    };\n\n    xhr.send();\n    console.log(\"sended data...\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      onData: this.onData,\n      strokeColor: \"#000000\",\n      backgroundColor: \"#f50057\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.startRecording,\n      outlined: true,\n      disabled: this.state.record,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Start\"), React.createElement(Button, {\n      onClick: this.stopRecording,\n      disabled: !this.state.record,\n      color: \"secondary\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Stop\")), this.state.audio_set && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        this.handleAnalyze();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      \"aria-label\": \"Delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(PlayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(\"audio\", {\n      ref: audio => {\n        this.audio = audio;\n      },\n      src: \"src/components/test.wav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        backgroundColor: this.state.emotion == \"happy\" ? \"#f50057\" : \"grey\",\n        color: this.state.emotion == \"happy\" ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Happy\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        backgroundColor: this.state.emotion == \"sad\" ? \"#f50057\" : \"grey\",\n        color: this.state.emotion == \"sad\" ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Sad\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        backgroundColor: this.state.emotion == \"neutral\" ? \"#f50057\" : \"grey\",\n        color: this.state.emotion == \"neutral\" ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Neutral\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        backgroundColor: this.state.emotion == \"fear\" ? \"#f50057\" : \"grey\",\n        color: this.state.emotion == \"fear\" ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Fear\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        backgroundColor: this.state.emotion == \"angry\" ? \"#f50057\" : \"grey\",\n        color: this.state.emotion == \"angry\" ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Angry\"))))));\n  }\n\n}\nexport default Voice;","map":{"version":3,"sources":["/Users/xmly/PythonProjects/speech-emotion-recognition/emotion-voice/src/components/Voice.js"],"names":["ReactMic","React","ReactDOM","Grid","Doughnut","axios","PlayIcon","ReactAudioPlayer","BottomNavigation","BottomNavigationAction","Box","Button","Paper","Fab","Voice","Component","constructor","props","startRecording","setState","record","display","stopRecording","onStop","bind","handleAnalyze","state","data","labels","datasets","label","backgroundColor","borderWidth","audio_set","emotion","postRequest","post","then","res","console","log","path","onData","recordedBlob","setValue","val","xhr","XMLHttpRequest","open","blobURL","responseType","scope","onload","e","status","myBlob","response","blobData","FormData","append","send","render","textAlign","margin","audio","color"],"mappings":"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","sourcesContent":["import { ReactMic } from 'react-mic';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport ReactAudioPlayer from 'react-audio-player';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\n\nexport class Voice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onStop = this.onStop.bind(this)\n    this.handleAnalyze = this.handleAnalyze.bind(this);\n    this.state = {\n      record: false,\n      display:false,\n      data: {\n        labels: ['Angry', 'Sad', 'Passion', 'Fear', 'Neutral'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2],\n            backgroundColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)'\n            ],\n            borderWidth: 0\n        }],\n        audio_set : true,\n        emotion: \"none\",\n        }\n    }\n\n  }\n\n  postRequest(){\n      axios.post('http://localhost:8000/analyse/', {\"name\":\"frank\"}).then(\n          res=>{\n              console.log(res.data)\n          }\n      )\n  }\n\n  startRecording = () => {\n    this.setState({\n      record: true,\n      display:false\n    });\n  }\n\n  handleAnalyze(){\n      axios.post('http://localhost:8000/analyse/', {\"path\":this.state.path}).then(\n          res=>{\n              console.log(res.data)\n              this.setState({emotion:res.data[\"emotion\"]})\n          }\n      )\n  }\n\n  stopRecording = () => {\n    this.setState({\n      record: false,\n      display:true\n    });\n  }\n\n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  setValue(val){\n      this.setState(val)\n  }\n\n  onStop(recordedBlob) {\n        // const bloburl = recordedBlob.blobURL\n        console.log(\"sending data...\")\n        console.log(recordedBlob)\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', recordedBlob.blobURL, true);\n        xhr.responseType = 'blob';\n        const scope = this\n        xhr.onload = function(e) {\n          if (this.status == 200) {\n            var myBlob = this.response;\n            let blobData = new FormData();\n            blobData.append('file', myBlob);\n\n            axios.post('http://localhost:8000/record/', blobData, {}).then(\n                res=>{\n                    console.log(res.data)\n                    scope.setState({path:res.data[\"dir\"], audio_set: true})\n                })\n          }\n        };\n        xhr.send();\n        console.log(\"sended data...\")\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n      <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#000000\"\n          backgroundColor=\"#f50057\"\n           />\n         </Grid>\n         <Grid\n             container\n             direction=\"row\"\n             justify=\"center\"\n             alignItems=\"center\"\n           >\n                <Button onClick={this.startRecording} outlined disabled={this.state.record} color=\"secondary\">Start</Button>\n                <Button onClick={this.stopRecording} disabled={!this.state.record} color=\"secondary\" type=\"button\">Stop</Button>\n        </Grid>\n\n\n       {this.state.audio_set &&\n           <div>\n\n                 <div onClick = {() => {this.handleAnalyze()}}>\n                     <div style={{textAlign:\"center\", margin:\"20px\"}}>\n                       <Fab  aria-label=\"Delete\" >\n                         <PlayIcon />\n                       </Fab>\n                      </div>\n                      <audio ref={(audio) => { this.audio = audio; }}\n                      src=\"src/components/test.wav\">\n                      </audio>\n                 </div>\n\n\n\n   <div>\n     <Grid container spacing={3}>\n       <Grid item xs={12}  style = {{\n           textAlign: 'center',\n         }}>\n         <Paper  style={{\n             backgroundColor:(this.state.emotion==\"happy\")?\"#f50057\":\"grey\",\n             color:(this.state.emotion==\"happy\")?\"white\":\"black\",\n         }}>Happy</Paper>\n       </Grid>\n       <Grid item xs={12} style = {{\n           textAlign: 'center',\n         }}>\n         <Paper  style={{\n             backgroundColor:(this.state.emotion==\"sad\")?\"#f50057\":\"grey\",\n             color:(this.state.emotion==\"sad\")?\"white\":\"black\",\n         }}>Sad</Paper>\n       </Grid>\n       <Grid item xs={12} style = {{\n           textAlign: 'center',\n         }}>\n         <Paper  style={{\n             backgroundColor:(this.state.emotion==\"neutral\")?\"#f50057\":\"grey\",\n             color:(this.state.emotion==\"neutral\")?\"white\":\"black\",\n         }}>Neutral</Paper>\n       </Grid>\n       <Grid item xs={12} style = {{\n           textAlign: 'center',\n         }}>\n         <Paper  style={{\n             backgroundColor:(this.state.emotion==\"fear\")?\"#f50057\":\"grey\",\n             color:(this.state.emotion==\"fear\")?\"white\":\"black\",\n         }}>Fear</Paper>\n       </Grid>\n       <Grid item xs={12} style = {{\n           textAlign: 'center',\n         }}>\n         <Paper  style={{\n             backgroundColor:(this.state.emotion==\"angry\")?\"#f50057\":\"grey\",\n             color:(this.state.emotion==\"angry\")?\"white\":\"black\",\n         }}>Angry</Paper>\n       </Grid>\n\n     </Grid>\n   </div>\n</div>\n\n}\n      </div>\n    );\n  }\n}\n\nexport default Voice;\n"]},"metadata":{},"sourceType":"module"}